name: Version on Commit

on:
  push:
    branches:
      - main
      - master
      - feat-jira-full

jobs:
  version-and-tag:
    runs-on: ubuntu-latest
    # Skip if commit message contains [skip ci] or [skip version]
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip version]')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Analyze commit and increment version
        id: version
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          echo "📝 Commit message: $COMMIT_MSG"
          echo "📦 Current version: $CURRENT_VERSION"

          # Determine version bump type based on conventional commits
          if echo "$COMMIT_MSG" | grep -qiE "^(BREAKING CHANGE|feat!|fix!)"; then
            BUMP_TYPE="major"
            EMOJI="💥"
          elif echo "$COMMIT_MSG" | grep -qiE "^feat(\(.+\))?:"; then
            BUMP_TYPE="minor"
            EMOJI="✨"
          else
            BUMP_TYPE="patch"
            EMOJI="🔧"
          fi

          echo "🎯 Bump type: $BUMP_TYPE"

          # Bump version
          npm version $BUMP_TYPE --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT
          echo "emoji=$EMOJI" >> $GITHUB_OUTPUT

          echo "🎉 New version: $NEW_VERSION"

      - name: Commit version bump
        run: |
          git add package.json
          git diff --staged --quiet || git commit -m "chore: bump version to v${{ steps.version.outputs.version }} [skip ci]"

      - name: Create git tag
        run: |
          git tag -a "v${{ steps.version.outputs.version }}" -m "${{ steps.version.outputs.emoji }} Release v${{ steps.version.outputs.version }}"

      - name: Push changes and tag
        run: |
          git push origin HEAD:${{ github.ref_name }}
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Create GitHub Summary
        run: |
          echo "## ${{ steps.version.outputs.emoji }} Version Bumped" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **New Version** | \`v${{ steps.version.outputs.version }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Bump Type** | \`${{ steps.version.outputs.bump_type }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Branch** | \`${{ github.ref_name }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Commit** | \`${{ github.sha }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🐳 Docker Image" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull gerard.nouglozeh/jira-enterprise-api:v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  trigger-docker-build:
    needs: version-and-tag
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Docker build workflow
        run: |
          echo "✅ Version bump completed. Docker build will be triggered automatically."
