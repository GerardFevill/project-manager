name: Deployment

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feat-jira-full' || github.event.inputs.environment == 'development'
    environment:
      name: development
      url: https://dev.your-domain.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Development Server
        run: |
          echo "🚀 Deploying to Development..."
          echo "Environment: development"
          echo "Image: gerard.nouglozeh/jira-enterprise-api:feat-jira-full"

      - name: Health Check
        run: |
          echo "✅ Health check passed"

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'staging'
    environment:
      name: staging
      url: https://staging.your-domain.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Staging Server
        run: |
          echo "🚀 Deploying to Staging..."
          echo "Environment: staging"
          echo "Image: gerard.nouglozeh/jira-enterprise-api:latest"

      - name: Run Smoke Tests
        run: |
          echo "🧪 Running smoke tests..."
          # Add smoke test commands here

      - name: Health Check
        run: |
          echo "✅ Health check passed"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://api.your-domain.com
    needs: []

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="latest"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Deploy to Production Server
        run: |
          echo "🚀 Deploying to Production..."
          echo "Environment: production"
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Image: gerard.nouglozeh/jira-enterprise-api:${{ steps.version.outputs.version }}"

      - name: Run Health Checks
        run: |
          echo "✅ Production health check passed"

      - name: Notify deployment
        run: |
          echo "## 🎉 Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: gerard.nouglozeh/jira-enterprise-api:${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY

  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    if: failure()
    needs: [deploy-production]

    steps:
      - name: Rollback to previous version
        run: |
          echo "⚠️ Rolling back to previous version..."

      - name: Notify rollback
        run: |
          echo "## ⚠️ Deployment Rolled Back" >> $GITHUB_STEP_SUMMARY
