name: Auto Version Increment

on:
  push:
    branches:
      - main
      - master
      - feat-jira-full

jobs:
  auto-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Determine version bump type from commit message
        id: bump_type
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"

          if echo "$COMMIT_MSG" | grep -qiE "^(BREAKING CHANGE:|feat!:|fix!:)"; then
            echo "type=major" >> $GITHUB_OUTPUT
            echo "Version bump: MAJOR (breaking change)"
          elif echo "$COMMIT_MSG" | grep -qiE "^feat(\(.+\))?:"; then
            echo "type=minor" >> $GITHUB_OUTPUT
            echo "Version bump: MINOR (new feature)"
          elif echo "$COMMIT_MSG" | grep -qiE "^(fix|perf|refactor|docs|style|test|chore|ci)(\(.+\))?:"; then
            echo "type=patch" >> $GITHUB_OUTPUT
            echo "Version bump: PATCH (fix/update)"
          else
            echo "type=patch" >> $GITHUB_OUTPUT
            echo "Version bump: PATCH (default)"
          fi

      - name: Bump version
        id: new_version
        run: |
          npm version ${{ steps.bump_type.outputs.type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update package.json and commit
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }} [skip ci]" || echo "No changes to commit"

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.new_version.outputs.version }}" -m "Release v${{ steps.new_version.outputs.version }}"
          git push origin HEAD:${{ github.ref_name }}
          git push origin "v${{ steps.new_version.outputs.version }}"

      - name: Summary
        run: |
          echo "### âœ… Version Incremented" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous version**: ${{ steps.current_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **New version**: ${{ steps.new_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Bump type**: ${{ steps.bump_type.outputs.type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag created**: v${{ steps.new_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
